{"createdAt":"2025-09-22T10:16:43.736Z","updatedAt":"2025-09-22T12:06:18.503Z","id":"FzT2NFNP2z1rhrUg","name":"scrapp_one_scan_pdf","active":true,"isArchived":false,"nodes":[{"parameters":{"content":"# Récupération des fichiers pdf\n","height":384,"width":1488,"color":6},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"98dd018d-a36b-499c-a50a-3511c5233906","name":"Sticky Note3"},{"parameters":{"resource":"fileFolder","returnAll":true,"filter":{"driveId":{"__rl":true,"value":"My Drive","mode":"list","cachedResultName":"My Drive","cachedResultUrl":"https://drive.google.com/drive/my-drive"},"folderId":{"__rl":true,"value":"1xlXmLKZZ6Y1z3TdHiRSbEZnbWrsm9PLn","mode":"list","cachedResultName":"one-scan","cachedResultUrl":"https://drive.google.com/drive/folders/1xlXmLKZZ6Y1z3TdHiRSbEZnbWrsm9PLn"}},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[896,64],"id":"7052cc5d-9d6f-4042-9df3-c6c3a8d9f89e","name":"Récupération List PDF","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"D9grsSI7lkfekCac","name":"Google Drive account"}}},{"parameters":{"operation":"pdf","options":{"keepSource":"json"}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1344,64],"id":"fb0d403c-08c2-448a-8232-01096b047634","name":"Extraction3","notesInFlow":true},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1072,64],"id":"129b38f5-fb18-4227-93a5-35094c12ef43","name":"TéléchargementPDF_Scan","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"D9grsSI7lkfekCac","name":"Google Drive account"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[16,256],"id":"b0766e21-44f5-42e9-999a-988e34030b70","name":"When clicking ‘Execute workflow’"},{"parameters":{"jsonSchemaExample":"[\n{\"Designation\":\"AMLODIPINE BIOGARAN 10MG GEL B/30\", \n\"DateStatement\":\"YYYY-MM or NOT DETECTED\", \"SalesStatement\": 510, \n\"Stock\":2\n},\n  \n{\"Designation\":\"AMLODIPINE BIOGARAN 10MG GEL B/30\", \n\"DateStatement\":\"YYYY-MM or NOT DETECTED\", \"SalesStatement\": 510, \n\"Stock\":2}\n\n]\n\n","autoFix":true,"customizeRetryPrompt":true},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[2736,1280],"id":"3e6f3fcf-d622-44ed-9d43-01bef4a8bbba","name":"Structured Output Parser"},{"parameters":{"jsCode":"// Ce script transforme un bloc de texte brut (rapport UBPHAR) en un tableau JSON structuré\n\nconst rawText = $json[\"text\"];\n\n// 🔹 Nettoyer le texte et séparer en lignes utiles\nconst lines = rawText\n  .split(\"\\n\")\n  .map(l => l.trim())\n  .filter(l => l.length > 0); // On supprime les lignes vides\n\n// 🔹 Extraction de la date dans l’entête (ex: \"Etat au 30 avril 2025\")\nconst dateMatch = rawText.match(/Etat au\\s+([\\d]{1,2}\\s+\\w+\\s+\\d{4})/i);\nconst DateStatement = dateMatch ? dateMatch[1] : null;\n\n// Tableau final des produits\nlet produits = [];\nlet current = null;\n\n/**\n * Vérifie si une ligne correspond à un code produit (ex: ALFA017)\n */\nfunction isCodeProduit(line) {\n  return /^[A-Z]{4}\\d{3,}$/.test(line);\n}\n\n/**\n * Vérifie si une ligne correspond à des chiffres de stock/ventes\n */\nfunction isLigneChiffres(line) {\n  return /^\\d+(\\s+-?\\d+)*$/.test(line);\n}\n\n/**\n * Ajoute le produit en cours au tableau si valide\n */\nfunction pushProduitIfValid() {\n  if (current && current.code) {\n    produits.push({ ...current });\n  }\n}\n\nfor (let i = 0; i < lines.length; i++) {\n  const line = lines[i];\n\n  if (isCodeProduit(line)) {\n    // Sauvegarde le produit précédent\n    pushProduitIfValid();\n\n    // Nouveau produit\n    current = {\n      code: line,\n      designation: \"\",\n      stock: 0,\n      ventes: []\n    };\n\n    // La désignation est composée des lignes suivantes jusqu’à rencontrer une ligne chiffres ou un autre code\n    let j = i + 1;\n    let designationParts = [];\n    while (j < lines.length && !isCodeProduit(lines[j]) && !isLigneChiffres(lines[j])) {\n      designationParts.push(lines[j]);\n      j++;\n    }\n    current.designation = designationParts.join(\" \");\n\n    // On place l’index juste avant la prochaine étape\n    i = j - 1;\n  }\n\n  else if (isLigneChiffres(line) && current) {\n    // On récupère les valeurs numériques\n    const chiffres = line.split(/\\s+/).map(Number);\n    current.stock = chiffres[0] || 0;\n    current.ventes = chiffres.slice(1);\n  }\n}\n\n// Ajouter le dernier produit\npushProduitIfValid();\n\n// 🔹 Mapper dans un format clair et standardisé\nreturn produits.map(p => ({\n  Code: p.code,\n  Designation: p.designation,\n  Stock: p.stock || 0,              // ⬅️ renommé\n  ventes_avril: p.ventes[0] || 0,\n  ventes_mars: p.ventes[1] || 0,\n  ventes_fevrier: p.ventes[2] || 0,\n  ventes_janvier: p.ventes[3] || 0,\n  ventes_decembre: p.ventes[4] || 0,\n  ventes_novembre: p.ventes[5] || 0,\n  DateStatement                  // ⬅️ ajout de la date globale\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2800,560],"id":"081e41a1-1fa5-4514-a825-56d5cbf3fdf6","name":"Parse PDF Data"},{"parameters":{"operation":"write","fileName":"=/tmp/page-{{$json.id}}.pdf","dataPropertyName":"=data","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[1408,1088],"id":"f32b0846-1b96-4ff1-8f05-c4574d7bb368","name":"Enregistrement PDF Temporaire","notesInFlow":true},{"parameters":{"jsCode":"// Récupérer la sortie actuelle\nconst mergedArray = $input.all().reduce((acc, item) => [...acc, ...item.json.output], []);\n\nreturn mergedArray.map(item => ({ json: item }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2800,928],"id":"8c5ca67c-8fff-400d-8866-d54e30675967","name":"Traitement Data"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[3760,576],"id":"64705542-6e72-45ee-983e-501cd6692ebf","name":"Merge Fichiers Récupérés","notesInFlow":true},{"parameters":{"content":"# Logique traitement Fichier SCAN","height":544,"width":3328,"color":2},"type":"n8n-nodes-base.stickyNote","position":[800,848],"typeVersion":1,"id":"cc669690-79f9-4ae9-bded-09ac1b5c308e","name":"Sticky Note5"},{"parameters":{"content":"# Logique traitement Fichier PDF","height":256,"width":736,"color":7},"type":"n8n-nodes-base.stickyNote","position":[880,544],"typeVersion":1,"id":"f5e214a8-a3c3-4d35-a68a-e8b94eb4cf42","name":"Sticky Note7"},{"parameters":{"content":"# Rassemblement des fichiers récupérés + traitement","height":320,"width":1920,"color":3},"type":"n8n-nodes-base.stickyNote","position":[2752,464],"typeVersion":1,"id":"0f6e3e08-555b-420e-9ddc-d85dfb43da11","name":"Sticky Note6"},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1216,1088],"id":"9b33eadc-189f-4629-869a-aca23fe68132","name":"TéléchargementPDF_Scan1","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"D9grsSI7lkfekCac","name":"Google Drive account"}}},{"parameters":{"command":"=#!/bin/bash\n\n# Variables (à adapter avec vos données n8n)\nINPUT_PDF=\"/tmp/page-{{$('Loop Over Items').item.json.id}}.pdf\"\nOUTPUT_PREFIX=\"/tmp/page-{{$('Loop Over Items').item.json.id }}\"\n\n# Conversion\ngs -q -sDEVICE=png16m -r150 -o \"${OUTPUT_PREFIX}-%03d.png\" \"${INPUT_PDF}\"\n\n# Génération JSON\nPNG_FILES=$(ls \"${OUTPUT_PREFIX}\"-*.png 2>/dev/null | jq -R -s -c 'split(\"\\n\")[:-1]')\necho '{\n  \"operation\": \"pdf_to_png\",\n  \"originalPdf\": \"'\"${INPUT_PDF}\"'\",\n  \"pageCount\": '\"$(ls \"${OUTPUT_PREFIX}\"-*.png 2>/dev/null | wc -l)\"',\n  \"pngFiles\": '\"${PNG_FILES}\"'\n}'"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[1808,1152],"id":"3cf0d9d4-f05a-41d9-929a-03d71c1444de","name":"Execute Command"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1584,1088],"id":"1ea1f7a6-9604-4413-9835-e36bea3fb672","name":"Loop Over Items"},{"parameters":{"jsCode":"// Récupère tous les inputs\nconst inputs = $input.all();\n\n// Initialise le tableau de résultat\nlet mergedFiles = [];\n\n// Pour chaque entrée\ninputs.forEach(input => {\n  try {\n    // Parse le JSON contenu dans stdout\n    const files = JSON.parse(input.json.stdout);\n    // Ajoute les fichiers au tableau fusionné\n    mergedFiles = mergedFiles.concat(files.pngFiles);\n  } catch (error) {\n    // Gestion d'erreur si le JSON est invalide\n    console.error(\"Erreur de parsing:\", error);\n  }\n});\n\n  // Retourne le tableau fusionné\n  return [{ \n    json: {\n      all_png_files: mergedFiles,\n      total_count: mergedFiles.length\n    }\n  }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1808,992],"id":"fe3fada2-4302-49e2-8477-91bff073178c","name":"Liste Fichiers"},{"parameters":{"mode":"combine","fieldsToMatchString":"id","outputDataFrom":"input2","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1056,1088],"id":"bb8b5e7e-e0fd-481c-9893-5cecc35a64ea","name":"Recuperation scans"},{"parameters":{"fileSelector":"/tmp/page-*.png","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[2032,992],"id":"9b4d8b3e-1e32-4ece-aae8-ede73f05ba63","name":"Lecture Fichier png"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"db3c4b8e-6600-4a45-926f-f40e21b20af9","leftValue":"={{ $json.text.replace(\"\\n\",\"\\b\").length }}","rightValue":20,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"renameOutput":true,"outputKey":"NORMAL PDF"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.text.replace(\"\\n\",\"\\b\").length }}","rightValue":20,"operator":{"type":"number","operation":"lt"},"id":"00afbd83-c5c0-4bee-af62-12f7986f91ac"}],"combinator":"and"},"renameOutput":true,"outputKey":"SCAN PDF"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1120,656],"id":"9af11745-d399-449c-943f-525af3840426","name":"Vérification si scan1","notesInFlow":true},{"parameters":{"assignments":{"assignments":[{"id":"22caff66-8750-4ebd-b701-5c9002a8a024","name":"Designation","value":"={{ $json.Designation }}","type":"string"},{"id":"bd64d7ad-ee39-47ab-8a57-6716fad76a0d","name":"DateStatement","value":"={{ $json.DateStatement }}","type":"string"},{"id":"935a1ba0-879f-44f2-8922-dbe850732057","name":"SalesStatement","value":"={{ $json.SalesStatement }}","type":"number"},{"id":"5270c3fa-03fe-48c9-864f-228536f1863c","name":"Stock","value":"={{ $json.Stock }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3072,928],"id":"6ad77548-48ca-4889-8d45-4bdd245f2c2c","name":"Aggregate-data"},{"parameters":{"jsCode":"/**\n * Ce que fait le code :\n\nDétection automatique : Il vérifie si l'objet contient au moins une propriété de mois\n\nTraitement différencié :\n\nPour les objets avec données mensuelles : il les transforme en entrées individuelles par mois\n\nPour les autres objets : il les retourne intacts\n\nPréservation des données : Aucune donnée n'est perdue\n */\n\nconst items = $input.all();\nlet result = [];\n\n// Liste des mois possibles\nconst moisKeys = [\n  \"Janvier\",\"Fevrier\",\"Mars\",\"Avril\",\"Mai\",\"Juin\",\n  \"Juillet\",\"Aout\",\"Septembre\",\"Octobre\",\"Novembre\",\"Decembre\"\n];\n\nitems.forEach(item => {\n  const data = item.json;\n\n  // Vérifier si l'objet a au moins une propriété de mois\n  const hasAnyMonth = moisKeys.some(mois => mois in data);\n  \n  if (hasAnyMonth) {\n    // C'est un objet avec des données mensuelles\n    moisKeys.forEach(mois => {\n      if (mois in data) {\n        const newItem = {...data};\n        newItem.Month = mois;\n        newItem.SalesStatement = data[mois] !== undefined ? data[mois] : null;\n        // Supprimer les propriétés de mois individuelles pour éviter la duplication\n        moisKeys.forEach(m => {\n          delete newItem[m];\n        });\n        result.push({ json: newItem });\n      }\n    });\n  } else {\n    // C'est un autre type d'objet, le retourner tel quel\n    result.push({ json: {...data} });\n  }\n});\n\nreturn result;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3200,560],"id":"42f2ed83-f270-47b5-b2f8-ccb6a0ee7d3e","name":"Aggregate-Ventes-v2"},{"parameters":{"keys":{"key":[{"currentKey":"ventes_avril","newKey":"Avril"},{"currentKey":"ventes_mars","newKey":"Mars"},{"currentKey":"ventes_fevrier","newKey":"Fevrier"},{"currentKey":"ventes_janvier","newKey":"Janvier"},{"currentKey":"ventes_decembre","newKey":"Decembre"},{"currentKey":"ventes_novembre","newKey":"Novembre"}]},"additionalOptions":{}},"type":"n8n-nodes-base.renameKeys","typeVersion":1,"position":[3024,560],"id":"ef6544de-1ea8-4d35-afb5-cf32f6dd7f97","name":"Rename Keys"},{"parameters":{"assignments":{"assignments":[{"id":"f3facb6c-747d-43ec-bfe7-2cce7966761f","name":"Designation","value":"={{ $json.Designation }}","type":"string"},{"id":"fbb0fea9-9187-45aa-94df-0f79a6faed46","name":"Stock","value":"={{ $json.Stock }}","type":"number"},{"id":"a5f4c471-fdc0-4244-b3e2-10c093184dc2","name":"DateStatement","value":"={{ $json.Month }}","type":"string"},{"id":"91618942-71bb-4e6f-8caa-b86d3d9cebe6","name":"SalesStatement","value":"={{ $json.SalesStatement }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3456,560],"id":"3ec96d95-556b-4b14-a500-9d01406328f2","name":"Aggregate-data1"},{"parameters":{"method":"POST","url":"https://rokmyodc-dev.outsystems.app/BioFlowCore/rest/Exposed_Bioflow_API/PostScrappedDesignationSupplierList","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={{$('select-field').all().map(x => x.json)}}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4320,576],"id":"8fc88885-a0d4-40d5-8547-ab94c2d56aa0","name":"HTTP Request","executeOnce":true,"credentials":{"httpBearerAuth":{"id":"ITmOCqxphYYmUFNQ","name":"Bearer Auth account"}}},{"parameters":{"content":"# ⛔️ Vigilance sur les appels api .Lors d'une requete http -> set execute once ❗️❗️","width":752,"color":3},"type":"n8n-nodes-base.stickyNote","position":[3936,288],"typeVersion":1,"id":"bebff3b3-094c-4285-987a-f8c113f1682f","name":"Sticky Note"},{"parameters":{"assignments":{"assignments":[{"id":"3a70b0f4-3dd4-4984-8e73-fd3ab55f9f77","name":"Designation","value":"={{ $json.Designation }}","type":"string"},{"id":"070e7e4c-4d31-4a4a-b747-ee070bb79c6f","name":"DateStatement","value":"={{ $json.DateStatement }}","type":"string"},{"id":"22e58440-6861-4c5d-b7c3-8e6beae68ddd","name":"SalesStatement","value":"={{ $json.SalesStatement }}","type":"number"},{"id":"4f3a345d-0e44-4156-bb84-dc464b7afc78","name":"Stock","value":"={{ $json.Stock }}","type":"number"},{"id":"0e000c0d-a503-4e98-993f-66d6c3b086d9","name":"Country","value":"=France","type":"string"},{"id":"d70908a0-6e80-4215-962e-3633a3986344","name":"Supplier","value":"preprod-scan","type":"string"}]},"options":{"ignoreConversionErrors":false}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4032,576],"id":"57395df0-a347-4bed-95ae-2b1d37e3ed91","name":"select-field","notesInFlow":true},{"parameters":{"projectId":{"__rl":true,"value":"rokia-464209","mode":"list","cachedResultName":"RokIA"},"modelName":"gemini-2.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleVertex","typeVersion":1,"position":[2544,1264],"id":"b8dd1cb8-bfc6-4bd9-9947-f77a9dcd9376","name":"Google Vertex Chat Model1","credentials":{"googleApi":{"id":"HUTPsOeU6rvWkpI1","name":"Google Service Account account"}}},{"parameters":{"projectId":{"__rl":true,"value":"rokia-464209","mode":"list","cachedResultName":"RokIA"},"modelName":"gemini-2.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleVertex","typeVersion":1,"position":[2672,1488],"id":"5793a871-7f03-46f1-a665-280e3bd68fde","name":"Google Vertex Chat Model2","credentials":{"googleApi":{"id":"HUTPsOeU6rvWkpI1","name":"Google Service Account account"}}},{"parameters":{"projectId":{"__rl":true,"value":"rokia-464209","mode":"list","cachedResultName":"RokIA"},"modelName":"gemini-2.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleVertex","typeVersion":1,"position":[2336,1264],"id":"ab318658-dff8-4e28-ba44-c6f01424544b","name":"Google Vertex Chat Model","credentials":{"googleApi":{"id":"HUTPsOeU6rvWkpI1","name":"Google Service Account account"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[2256,992],"id":"8cc9304f-227b-4b44-bad6-3694d024da42","name":"Loop Over Items1","executeOnce":false},{"parameters":{"promptType":"define","text":"={{ $binary}}","hasOutputParser":true,"needsFallback":true,"messages":{"messageValues":[{"message":"You are a helpful assistant, please extract information data from both binary files .Don't forget any lines.And mark each lines by a number considered as id."},{"type":"HumanMessagePromptTemplate","messageType":"imageBinary"},{"type":"AIMessagePromptTemplate","message":"=Tu reçois le texte OCR ou numérique d’un PDF. Ta tâche est d’extraire UNIQUEMENT les lignes d’articles du tableau principal “statistique de vente par fournisseur” et de les convertir en JSON, avec EXACTEMENT les clés suivantes par objet :|{\"Designation\":\"AMLODIPINE BIOGARAN 10MG GEL B/30\", \"StatementDate\":\"YYYY-MM ou NOT DETECTED\", \"Vendu\": 510, \"Stock\":2} CONTRAINTES (OBLIGATOIRE) :1) N’UTILISE QUE le contenu du PDF fourni. Zéro hallucination. Pas d’inférence externe.2) FOURNISSEUR (FRS) :   - Cherche la mention fournisseur dans l’en-tête, le libellé “FOURNISSEUR: …”, “Frs : …”, ou le pied de page (ex: “FRS. TEDIS_BIOGARAN AVRIL 2025”).   - Si tu ne peux pas l’identifier de manière certaine, mets EXACTEMENT \"NOT DETECTED\".   - Interdiction d’utiliser “BIOGARAN” comme fournisseur. S’il n’y a qu’“BIOGARAN” (marque/laboratoire), mets \"NOT DETECTED\".3) MOIS :   - Détecte le mois du document. Cas possibles par ordre de priorité :     a) Mois explicite (ex. “AVRIL 2025” dans pied de page ou titre) → normalise en YYYY-MM.     b) Plage “Du JJ/MM/AAAA au JJ/MM/AAAA” → si début et fin sont dans le même mois/année, retourne ce mois en YYYY-MM, sinon \"NOT DETECTED\".     c) Sinon \"NOT DETECTED\".   - Exemple de normalisation : janvier=01, février=02, mars=03, avril=04, mai=05, juin=06, juillet=07, août=08, septembre=09, octobre=10, novembre=11, décembre=12.4) TABLEAU PRINCIPAL :   - Ne traite QUE le tableau récapitulatif fournisseur (ignore toute page “par zone”, “point des commandes”, sous-totaux, récap, etc.).   - Chaque ligne d’article du tableau devient UN objet JSON.   - ARTICLE = libellé exact de la ligne (ex. “OMEPRAZOLE BIOGARAN 20MG 28GELS”).   - VENTE = valeur de la colonne du mois courant “M” (pas M-1, pas M-2). Convertis en entier si possible, sinon null. Ne corrige PAS les valeurs négatives : conserve-les telles quelles.   - STAT = “Stock actuel” (ou “Stock” selon l’intitulé). Convertis en entier si possible, sinon null.   - S’il manque une valeur lisible → null (ne pas inventer).   - Ne déduplique pas : s’il y a plusieurs lignes identiques dans le PDF, elles donnent plusieurs objets.5) SORTIE :   - Retourne UNIQUEMENT un tableau JSON (pas de texte, pas de commentaires, pas de Markdown).   - Chaque objet doit contenir EXACTEMENT ces clés et dans n’importe quel ordre : `Designation`, `DateStatement`, `Stock`,SalesStatement.   - Répète la même valeur de `Designation` et `Month` sur toutes les lignes. ENTRÉE (texte du PDF) :{{pdf_text}}"}]},"batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.7,"position":[2464,1040],"id":"28a08bd8-6202-445e-94a8-79d5b7f1e137","name":"AI IMG EXTRACTOR1"},{"parameters":{"httpMethod":"POST","path":"cfb0b2b1-c97b-4d6c-8c39-410f3b4798f2","authentication":"headerAuth","options":{"rawBody":true,"responseData":"={{ { message : \"workflow have been launched to scrapp pdf files from store\"\n\n} }}"}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[32,80],"id":"f4923cce-3c72-4b53-b463-6b288791c353","name":"Webhook","webhookId":"cfb0b2b1-c97b-4d6c-8c39-410f3b4798f2","credentials":{"httpHeaderAuth":{"id":"ypPMx9IWNBN4xUaN","name":"Header Auth account"}}}],"connections":{"Récupération List PDF":{"main":[[{"node":"TéléchargementPDF_Scan","type":"main","index":0}]]},"Extraction3":{"main":[[{"node":"Vérification si scan1","type":"main","index":0}]]},"TéléchargementPDF_Scan":{"main":[[{"node":"Extraction3","type":"main","index":0},{"node":"Recuperation scans","type":"main","index":1}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Récupération List PDF","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI IMG EXTRACTOR1","type":"ai_outputParser","index":0}]]},"Parse PDF Data":{"main":[[{"node":"Rename Keys","type":"main","index":0}]]},"Enregistrement PDF Temporaire":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Traitement Data":{"main":[[{"node":"Aggregate-data","type":"main","index":0}]]},"Merge Fichiers Récupérés":{"main":[[{"node":"select-field","type":"main","index":0}]]},"TéléchargementPDF_Scan1":{"main":[[{"node":"Enregistrement PDF Temporaire","type":"main","index":0}]]},"Execute Command":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Liste Fichiers","type":"main","index":0}],[{"node":"Execute Command","type":"main","index":0}]]},"Liste Fichiers":{"main":[[{"node":"Lecture Fichier png","type":"main","index":0}]]},"Recuperation scans":{"main":[[{"node":"TéléchargementPDF_Scan1","type":"main","index":0}]]},"Lecture Fichier png":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Vérification si scan1":{"main":[[{"node":"Parse PDF Data","type":"main","index":0}],[{"node":"Recuperation scans","type":"main","index":0}]]},"Aggregate-data":{"main":[[{"node":"Merge Fichiers Récupérés","type":"main","index":1}]]},"Aggregate-Ventes-v2":{"main":[[{"node":"Aggregate-data1","type":"main","index":0}]]},"Rename Keys":{"main":[[{"node":"Aggregate-Ventes-v2","type":"main","index":0}]]},"Aggregate-data1":{"main":[[{"node":"Merge Fichiers Récupérés","type":"main","index":0}]]},"select-field":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Google Vertex Chat Model1":{"ai_languageModel":[[{"node":"AI IMG EXTRACTOR1","type":"ai_languageModel","index":1}]]},"Google Vertex Chat Model2":{"ai_languageModel":[[{"node":"Structured Output Parser","type":"ai_languageModel","index":0}]]},"Google Vertex Chat Model":{"ai_languageModel":[[{"node":"AI IMG EXTRACTOR1","type":"ai_languageModel","index":0}]]},"Loop Over Items1":{"main":[[{"node":"Traitement Data","type":"main","index":0}],[{"node":"AI IMG EXTRACTOR1","type":"main","index":0}]]},"AI IMG EXTRACTOR1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Récupération List PDF","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveDataErrorExecution":"all","saveDataSuccessExecution":"all","saveExecutionProgress":true,"saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"3c565241-5c57-4e07-ab94-b9e09bb900bb","triggerCount":1,"shared":[{"createdAt":"2025-09-22T10:16:43.736Z","updatedAt":"2025-09-22T10:16:43.736Z","role":"workflow:owner","workflowId":"FzT2NFNP2z1rhrUg","projectId":"TAg2OWp8a2XzOVPs"}],"tags":[]}