{"createdAt":"2025-07-30T14:38:54.971Z","updatedAt":"2025-07-30T18:14:33.575Z","id":"tQxHfuM2VH5sE0jh","name":"tunnel-pick-node-v2","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"Node_Name"},{"name":"Execution_URL"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-416,192],"id":"bead1154-e6fd-4206-99f7-d70475eae06a","name":"Listener"},{"parameters":{"resource":"execution","operation":"get","executionId":"={{$json.Execution_Id}}","options":{"activeWorkflows":true},"requestOptions":{}},"type":"n8n-nodes-base.n8n","typeVersion":1,"position":[32,192],"id":"c5b7676a-7a16-4817-b4e1-81c52111b7f8","name":"Get an execution","notesInFlow":true,"credentials":{"n8nApi":{"id":"8NDl1mAtTpFgl0bf","name":"n8n account"}}},{"parameters":{"jsCode":"// ==========================\n// ✅ PARTIE 0 : Récupérer les deux exécutions depuis Combine\n// ==========================\nconst parentExec = JSON.parse($json.Parent_Exec);\nconst targetExec = JSON.parse($json.Target_Exec);\n\n// Extraire les ID pour debug\nconst parentId = $json.Parent_ID || '❓ inconnu';\nconst targetId = $json.Target_ID || '❓ inconnu';\n\n// ==========================\n// ✅ PARTIE 1 : Données du nœud ciblé dans l’exécution cible\n// ==========================\nconst targetNodeName = $('Centrage').item.json.Node_Name;\n\nif (!targetExec?.data?.resultData?.runData[targetNodeName]) {\n  throw new Error(\n    `❌ Le nœud \"${targetNodeName}\" n'existe pas dans **l'exécution cible** (ID: ${targetId})`\n  );\n}\n\n// Récupérer les données JSON et Binary du nœud cible\nconst targetNodeData = targetExec.data.resultData.runData[targetNodeName][0].data;\nconst targetJson = targetNodeData.main?.[0]?.[0]?.json || {};\nconst targetBinaryRaw = targetNodeData.main?.[0]?.[0]?.binary || {};\n\n// ✅ Préfixer les binaires du nœud cible\nconst targetBinary = {};\nfor (const key in targetBinaryRaw) {\n  targetBinary[`Target_${key}`] = targetBinaryRaw[key];\n}\n\n// ==========================\n// ✅ PARTIE 2 : Trouver le dernier nœud exécuté dans l’exécution parent\n// ==========================\nconst lastNode = parentExec.data?.resultData?.lastNodeExecuted;\n\nif (!lastNode) {\n  throw new Error(\n    `❌ Impossible de déterminer le dernier nœud exécuté dans **l'exécution parent** (ID: ${parentId})`\n  );\n}\n\nif (!parentExec.data?.resultData?.runData[lastNode]) {\n  throw new Error(\n    `❌ Impossible de trouver le nœud \"${lastNode}\" dans **l'exécution parent** (ID: ${parentId})`\n  );\n}\n\nconst previousNodeName = lastNode;\n\n// Bloquer certains nœuds qui n’ont pas de données exploitables\nconst unwantedNodes = [\n  'When clicking \\'Execute workflow\\'',\n  'Webhook Trigger',\n  'Manual Trigger'\n];\nif (unwantedNodes.includes(previousNodeName)) {\n  throw new Error(\n    `⚠️ Le nœud précédent est un trigger (${previousNodeName}) et n’a pas de données exploitables dans **l'exécution parent** (ID: ${parentId})`\n  );\n}\n\n// ==========================\n// ✅ PARTIE 3 : Récupérer les Binary & JSON du parentLastNode\n// ==========================\nconst parentNodeData = parentExec.data.resultData.runData[previousNodeName][0].data;\nconst parentJson = parentNodeData.main?.[0]?.[0]?.json || {};\nconst parentBinaryRaw = parentNodeData.main?.[0]?.[0]?.binary || {};\n\n// ✅ Préfixer les binaires du parent\nconst parentBinary = {};\nfor (const key in parentBinaryRaw) {\n  parentBinary[`Parent_${key}`] = parentBinaryRaw[key];\n}\n\n// ==========================\n// ✅ Fusion des binary parent + target\n// ==========================\nconst mergedBinary = { ...targetBinary, ...parentBinary };\n\n// ==========================\n// 🎯 Sortie finale\n// ==========================\nreturn [\n  {\n    json: {\n      parentExecutionId: parentId,\n      parentLastNode: previousNodeName,\n      parentJson,                 // ✅ Ajout du parentJson ici\n      targetExecutionId: targetId,\n      targetNodeName,\n      targetJson\n    },\n    binary: mergedBinary\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1152,192],"id":"415a149b-03a2-4038-ab4d-ced849decc59","name":"Search Binary Node"},{"parameters":{"resource":"execution","operation":"get","executionId":"={{ $('Get an execution').first().json.data.parentExecution.executionId  }}","options":{"activeWorkflows":true},"requestOptions":{}},"type":"n8n-nodes-base.n8n","typeVersion":1,"position":[400,48],"id":"6fe04fe6-2a5e-4c01-8e26-e006c0f18fb0","name":"Get an execution parent","notesInFlow":true,"credentials":{"n8nApi":{"id":"8NDl1mAtTpFgl0bf","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"23c6b225-cb7b-4981-ac1d-354157d24a40","name":"Execution_Id","value":"={{ $json.Execution_URL ? $json.Execution_URL.split('/').at(-1) : $execution.id }}","type":"string"},{"id":"32cc628d-5d6b-4334-bc70-f04edbacaa85","name":"Workflow_Id","value":"={{ $json.Execution_URL ? $json.Execution_URL.split('/').at(-2) : $workflow.id }}","type":"string"},{"id":"f89db063-edad-41c4-b8f1-cfe90dd3369d","name":"Execution_URL","value":"={{ $json.Execution_URL }}","type":"string"},{"id":"4a069e85-0f2f-4401-a654-e297f5eceaac","name":"Execution_Id_This","value":"={{  $execution.id  }}","type":"string"}]},"includeOtherFields":true,"include":"selected","includeFields":"Node_Name","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-208,192],"id":"425ea10a-b8fe-46d0-9f85-6640b113136d","name":"Centrage","notesInFlow":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4d4834e2-2d37-4cbb-8271-957c191e549c","leftValue":"={{ $('Centrage').first().json.Execution_URL?.length > 0 }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[240,192],"id":"d9666ecf-5546-4f74-bc55-a7bc669035cd","name":"Appeler sans Execution URL ?"},{"parameters":{"assignments":{"assignments":[{"id":"27985574-a040-4c59-945d-053b548c1658","name":"Parent_Exec","value":"={{ $json }}","type":"string"},{"id":"d5180e42-619e-4c7f-bdf9-9abd084757c8","name":"Parent_ID","value":"={{ $json.id }}","type":"string"},{"id":"16e6e146-2a6c-4b3c-9e24-f6dc40bdb650","name":"Target_Exec","value":"={{ $('Get an execution').item.json }}","type":"string"},{"id":"8cd3e54d-538e-4594-919c-a61e678b655d","name":"Target_ID","value":"={{ $('Get an execution').item.json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[784,336],"id":"fe24357b-03d5-42ff-acbb-12e668bc0024","name":"Datas **","notesInFlow":true},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{"includeUnpaired":true}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[928,192],"id":"a567da2e-a5ab-42f2-8f99-1bd353e38d37","name":"Combine","notesInFlow":true},{"parameters":{"resource":"execution","operation":"get","executionId":"={{  $('Centrage').item.json.Execution_Id_This }}","options":{"activeWorkflows":true},"requestOptions":{}},"type":"n8n-nodes-base.n8n","typeVersion":1,"position":[400,336],"id":"9ae47784-cc63-4dd1-8897-0a2cc32f226a","name":"Get an execution parent *","notesInFlow":true,"credentials":{"n8nApi":{"id":"8NDl1mAtTpFgl0bf","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"27985574-a040-4c59-945d-053b548c1658","name":"Parent_Exec","value":"={{ $json }}","type":"string"},{"id":"d5180e42-619e-4c7f-bdf9-9abd084757c8","name":"Parent_ID","value":"={{ $json.id }}","type":"string"},{"id":"16e6e146-2a6c-4b3c-9e24-f6dc40bdb650","name":"Target_Exec","value":"={{ $json }}","type":"string"},{"id":"8cd3e54d-538e-4594-919c-a61e678b655d","name":"Target_ID","value":"={{ $json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[784,48],"id":"2eddd797-6b90-4c77-9494-b6d7c6021cc9","name":"Datas","notesInFlow":true},{"parameters":{"resource":"execution","operation":"get","executionId":"={{ $json.data.parentExecution.executionId }}","options":{"activeWorkflows":true},"requestOptions":{}},"type":"n8n-nodes-base.n8n","typeVersion":1,"position":[608,336],"id":"fd493c43-5b95-41ee-94dd-2bd90b4903e9","name":"Get an execution parent1","notesInFlow":true,"credentials":{"n8nApi":{"id":"8NDl1mAtTpFgl0bf","name":"n8n account"}}}],"connections":{"Listener":{"main":[[{"node":"Centrage","type":"main","index":0}]]},"Get an execution":{"main":[[{"node":"Appeler sans Execution URL ?","type":"main","index":0}]]},"Get an execution parent":{"main":[[{"node":"Datas","type":"main","index":0}]]},"Centrage":{"main":[[{"node":"Get an execution","type":"main","index":0}]]},"Appeler sans Execution URL ?":{"main":[[{"node":"Get an execution parent","type":"main","index":0}],[{"node":"Get an execution parent *","type":"main","index":0}]]},"Datas **":{"main":[[{"node":"Combine","type":"main","index":1}]]},"Combine":{"main":[[{"node":"Search Binary Node","type":"main","index":0}]]},"Get an execution parent *":{"main":[[{"node":"Get an execution parent1","type":"main","index":0}]]},"Datas":{"main":[[{"node":"Combine","type":"main","index":0}]]},"Get an execution parent1":{"main":[[{"node":"Datas **","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"98a3ca73-ffb9-4652-ae9d-fefa0826784a","triggerCount":0,"shared":[{"createdAt":"2025-08-14T07:15:22.128Z","updatedAt":"2025-08-14T07:15:22.128Z","role":"workflow:owner","workflowId":"tQxHfuM2VH5sE0jh","projectId":"TAg2OWp8a2XzOVPs"}],"tags":[]}